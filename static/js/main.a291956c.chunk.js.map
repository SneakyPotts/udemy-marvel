{"version":3,"sources":["resources/img/vision.png","components/appHeader/AppHeader.jsx","resources/img/mjolnir.png","services/MarvelService.js","components/spiner/Spinner.jsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","components/app/App.js","index.js"],"names":["AppHeader","className","href","API_URL","process","API_KEY","MarvelService","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","View","RandomChar","useState","setChar","loading","setLoading","error","setError","marvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","onError","Math","floor","random","then","catch","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemsLoading","setNewItemsLoading","setOffset","charEnded","setCharEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","index","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","preventDefault","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","App","selectedChar","setSelectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a291956c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const API_URL = process.env.REACT_APP_API_URL;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nclass MarvelService {\r\n\r\n  _baseOffset = 1000;\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok)\r\n      throw new Error(`Could not fetch ${url}, status - ${res.status}`)\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(`${API_URL}characters?limit=9&offset=${offset}&apikey=${API_KEY}`);\r\n\r\n    return res.data.results.map(this._transformCharacter)\r\n  }\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(`${API_URL}characters/${id}?apikey=${API_KEY}`);\r\n\r\n    return this._transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n      src={img}\r\n      alt='Error'\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spiner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport {useEffect, useState} from \"react\";\n\nconst RandomChar = () => {\n\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const marvelService = new MarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n    setLoading(false);\n    setError(false);\n  }\n  const onCharLoading = () => {\n    setLoading(true);\n  }\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  }\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    onCharLoading();\n\n    marvelService\n      .getCharacter(id)\n      .then(onCharLoaded)\n      .catch(onError)\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading ? <Spinner/> : null;\n  const content = !(loading || error) ? <View char={char}/> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!<br/>\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">\n          Or choose another one\n        </p>\n        <button\n          className=\"button button__main\"\n          type='button'\n          onClick={updateChar}\n        >\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n      </div>\n    </div>\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki} = char;\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default RandomChar;","import './charList.scss';\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spiner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n  const [offset, setOffset] = useState(1000);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const marvelService = new MarvelService()\r\n\r\n  useEffect(() => {\r\n    onRequest();\r\n\r\n    //todo: if u want use scroll pagination use next line code\r\n\r\n    // window.addEventListener('scroll', this.onScrollPagination);\r\n  },[]);\r\n\r\n  const onScrollPagination = () => {\r\n    if (charEnded) {\r\n      window.removeEventListener('scroll', onScrollPagination);\r\n      return;\r\n    }\r\n    if ((window.pageYOffset + document.documentElement.clientHeight) >= (document.documentElement.scrollHeight - 1)) {\r\n      onRequest(this.state.offset);\r\n    }\r\n  }\r\n\r\n  const onRequest = (offset) => {\r\n    onCharListLoading();\r\n    marvelService\r\n      .getAllCharacters(offset)\r\n      .then(onCharListLoaded)\r\n      .catch(onError)\r\n  }\r\n\r\n  const onCharListLoading = () => {\r\n    setNewItemsLoading(true)\r\n  }\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList(charList => [...charList, ...newCharList]);\r\n    setLoading(false);\r\n    setNewItemsLoading(false);\r\n    setOffset(offset => offset + 9);\r\n    setCharEnded(ended);\r\n  }\r\n\r\n  const onError = () => {\r\n    setError(true);\r\n    setLoading(false);\r\n  }\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n    itemRefs.current[id].classList.add('char__item_selected');\r\n    itemRefs.current[id].focus();\r\n  }\r\n\r\n  const renderItems = (arr) => {\r\n    const items = arr.map(({id, name, thumbnail}, index) => {\r\n      let imgStyle = {'objectFit': 'cover'};\r\n\r\n      if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit': 'unset'};\r\n      }\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          key={id}\r\n          ref={el => {\r\n            itemRefs.current[index] = el\r\n          }}\r\n          onClick={() => {\r\n            props.onCharSelected(id);\r\n            focusOnItem(index);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === ' ' || e.key === \"Enter\") {\r\n              e.preventDefault();\r\n              props.onCharSelected(id);\r\n              focusOnItem(index);\r\n            }\r\n          }}>\r\n        >\r\n          <img src={thumbnail} alt={name} style={imgStyle}/>\r\n          <div className=\"char__name\">{name}</div>\r\n        </li>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <ul className=\"char__grid\">\r\n        {items}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? <ErrorMessage/> : null;\r\n  const spinner = loading ? <Spinner/> : null;\r\n  const content = !(loading || error) ? items : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {spinner}\r\n      {errorMessage}\r\n      {content}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        type='button'\r\n        disabled={newItemsLoading}\r\n        style={{display: charEnded ? \"none\" : \"block\"}}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport PropTypes from 'prop-types';\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spiner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport {useEffect, useState} from \"react\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const marvelService = new MarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n    setLoading(false);\n    setError(false);\n  }\n\n  const onCharLoading = () => {\n    setLoading(true);\n  }\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  }\n\n  const updateChar = () => {\n    const {charId} = props;\n\n    if (!charId)\n      return;\n\n    onCharLoading();\n\n    marvelService\n      .getCharacter(charId)\n      .then(onCharLoaded)\n      .catch(onError)\n  }\n\n  const skeleton = char || loading || error ? null : <Skeleton/>\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n  let imgStyle = {'objectFit': 'cover'};\n\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit': 'unset'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with character'}\n        {comics.map(({name}, index) => {\n          // eslint-disable-next-line\n          if (index > 9) return;\n\n          return (\n            <li\n              className=\"char__comics-item\"\n              key={index}\n            >{name}</li>\n          );\n        })}\n\n\n      </ul>\n    </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n}\n\nexport default CharInfo;","import React, {Component} from 'react';\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: true\r\n    });\r\n  }\r\n\r\n  // static getDerivedStateFromError(error) {\r\n  //   return {error: true}\r\n  // }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import decoration from '../../resources/img/vision.png';\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\n\nimport {useState} from \"react\";\n\nconst App = () => {\n  const [selectedChar, setSelectedChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setSelectedChar(id);\n  }\n\n  return (\n    <div className=\"app\">\n      <AppHeader/>\n      <main>\n        <ErrorBoundary>\n          <RandomChar/>\n        </ErrorBoundary>\n        <div className=\"char__content\">\n          <ErrorBoundary>\n            <CharList\n              onCharSelected={onCharSelected}\n            />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharInfo\n              charId={selectedChar}\n            />\n          </ErrorBoundary>\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n      </main>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}